<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Storage;
class Menu extends Model
{
    protected $table = 'menu';

    protected $fillable =[
    	'title',
    	'slug',
    	'image',
    	'template_id',
    	'parend_id',
    	'order_num',
    	'status',
    ];
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model){
           $model->parend_id = 0;
           $model->order_num =Menu::ordernum();
           $model->status = 1;
           $model->tree = 1;
        });
    }
    public static function add($filds,$images)
    {

        $post = new static;
        $post->fill($filds);
        $post->uploadeImage($images);
        $post->slug = Menu::temp_slug($filds['template_id']);
        $post->module = ($filds['module']==null)?'0':Menu::temp_slug($filds['module']);
        $post->save();
    }
    public function edit($filds,$images)
    {
        $this->fill($filds); 
        $this->uploadeImage($images);
        $this->slug = Menu::temp_slug($this->template_id);
        $this->module = ($filds['module']==1||$filds['module']==null)?'0':Menu::temp_slug($filds['module']);
        $this->save();
    }
    public function uploadeImage($image)
    {
        if ($image == null) {return;}
        $fileNime = Str::random(10) . '.' . $image->extension();
        $image->storeAs('uploads/menu/',$fileNime);
        $this->image = $fileNime;
        $this->save();
    }
    public function getImage()
    {
        if($this->image == null)
        {
            return 'themes/backend/image/default.png';
        }
        return '/uploads/menu/' . $this->image;
    }
    public static function deleteImage($image)
    {
        if($image!='') {
            Storage::delete('/uploads/menu/'.$image);
        }
    }

    public static function temp_slug($id)
    {

    	$temp = 'q';
    	if($id)
    	{
        	$temp = Template::find($id)->slug;            
    		return $temp;
    	}
    	return $temp;

    }
    public static function temp_name($id)
    {
    	$temp = 'q';
    	if($id)
    	{
        	$temp = Template::find($id)->title;
    		return $temp;
    	}
    	return $temp;
    }
    public static function menus()
    {
        $menu = Menu::all()->sortByDesc('order_num');
        return $menu;
    }
    public static function ordernum()
    {
        $max = Menu::max('order_num');
        return $max+1;
    }
}
